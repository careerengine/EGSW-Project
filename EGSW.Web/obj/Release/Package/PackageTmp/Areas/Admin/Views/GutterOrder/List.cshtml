@model PagedList.IPagedList<GutterCleanOrder>
@using System.Web.Mvc
@using EGSW.Data
@using PagedList.Mvc;
@{
    ViewBag.Title = "Order List";

    var _dateTimeHelper = DependencyResolver.Current.GetService<EGSW.Services.Directory.IDateTimeHelper>();

    IList<SelectListItem> OrderStatusList = new List<SelectListItem>();   
    OrderStatusList.Add(new SelectListItem() { Text = "Pending", Value = "10" });
    OrderStatusList.Add(new SelectListItem() { Text = "Processing", Value = "20" });
    OrderStatusList.Add(new SelectListItem() { Text = "Complete", Value = "30" });
    OrderStatusList.Add(new SelectListItem() { Text = "Cancelled", Value = "40" });
    
   
}


<h4>Order List</h4>
@*@using (Html.BeginForm())*@
@using (Html.BeginForm("List", "GutterOrder", FormMethod.Get))
{

    <div class="form-horizontal">
        <h4>Search</h4>
        <hr />
        @*@Html.AntiForgeryToken()*@

        <div class="form-group">
            <label for="FirstName" class="control-label col-md-2">Customer Email</label>
            <div class="col-md-10">                
                @Html.TextBox("CustomerEmail", ViewBag.CustomerEmailData as string, new { @class = "form-control" }) 
            </div>
        </div>

        <div class="form-group">
            <label for="FirstName" class="control-label col-md-2">Order Status</label>
            <div class="col-md-10">
                @Html.DropDownList("OrderStatusId", OrderStatusList, "All", new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            <label for="FirstName" class="control-label col-md-2"></label>
            <div class="col-md-10">
                <input type="submit" value="Find" class="btn btn-default" />
            </div>
        </div>



        <div class="form-fields table-responsive">
            <table class="table">
                <tr>
                    <th>
                        Order #
                    </th>

                    <th>
                        Email
                    </th>


                    <th>
                        Order Status
                    </th>
                    <th>
                        Payment Status
                    </th>
                    <th>
                        Order Total
                    </th>

                    <th>
                        Created On
                    </th>


                    <th></th>
                </tr>

                @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Customer.Email)
            </td>

            <td>
                @(((OrderStatus)item.OrderStatusId).ToString())
            </td>
            <td>

                @(((PaymentStatus)item.PaymentStatusId).ToString())
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.OrderTotal)*@ @string.Format("{0:C}",item.OrderTotal)
            </td>

            <td>
                @*@Html.DisplayFor(modelItem => item.CreatedOnUtc)*@
                @_dateTimeHelper.ConvertToUserTime(item.CreatedOnUtc, DateTimeKind.Utc)
            </td>

            <td>
                <a href="@Url.Action("OrderDetail", "GutterOrder", new { orderId = item.Id })">View</a>

            </td>
        </tr>
        }

            </table>

            <div id='Paging' style="text-align:center">
                @Html.PagedListPager(Model, page => Url.Action("List", new { page, CustomerEmail = ViewBag.CustomerEmailData, OrderStatusId = ViewBag.OrderStatusIdData }))
            </div>
        </div>
        </div>
        }
