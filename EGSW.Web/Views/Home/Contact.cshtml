@model EGSW.Web.Models.ContactUsModel
@using EGSW.Framework;

@{
    ViewBag.Title = "Contact Us - Ericsguttercleaning | Inexpensive Low-Cost Fast Residential House Gutter Cleaning Service";
    ViewBag.MetaDescription = "Have a question for ericsguttercleaning?  Please use this form to contact us about our gutter cleaning services.  ericsguttercleaning was launched as a fast low-cost solution to a dirty job.";
    
}

<h2>Contact Us</h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        @Html.AntiForgeryToken()


        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Message, new {  @class = "form-control", style = "width:100%;border:1px solid #cccccc;"  })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
           
        <div class="col-md-offset-2 col-md-10">
            @Html.Raw(Html.GenerateCaptcha())
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>

            @if (Model.Result)
            {
                <div class="col-md-offset-2 col-md-10">
                    <div class="text-success">
                        Your inquiry has been successfully sent.
                    </div>
                </div>
            }
                   
               

                </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
